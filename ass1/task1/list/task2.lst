     1                                  section	.rodata			; we define (global) read-only variables in .rodata section
     2 00000000 25730A00                	format_string: db "%s", 10, 0	; format string
     3                                  
     4                                  section .bss			; we define (global) uninitialized variables in .bss section
     5                                  	
     6                                  	
     7                                  	
     8                                  
     9                                  section .data 
    10 00000000 696C6C6567616C2069-     	an: db 'illegal input', 10, 0
    10 00000009 6E7075740A00       
    11                                  
    12                                  section .text
    13                                  	global assFunc
    14                                  	extern printf
    15                                  	extern c_checkValidity
    16                                  
    17                                  assFunc:
    18 00000000 55                      	push ebp
    19 00000001 89E5                    	mov ebp, esp	
    20 00000003 60                      	pushad			
    21                                  
    22 00000004 8B5D08                  	mov ebx, dword [ebp+8]	; get function argument (pointer to string)
    23 00000007 8B4D0C                  	mov ecx, dword [ebp+12]	; get function argument (pointer to string)
    24 0000000A 83EC04                  	sub esp, 4
    25                                  
    26 0000000D 51                      	push ecx
    27 0000000E 53                      	push ebx
    28 0000000F E8(00000000)            	call c_checkValidity
    29 00000014 83C408                  	add esp, 8				; clean up stack after call
    30                                  
    31 00000017 83F800                  	cmp eax, 0
    32 0000001A 7446                    	jz illegal	
    33                                  	
    34 0000001C 01CB                    	add ebx, ecx
    35 0000001E 895DFC                  	mov dword [ebp - 4], ebx
    36 00000021 83EC04                  	sub esp, 4
    37                                  
    38                                  
    39                                  
    40 00000024 8B45FC                  	mov eax, dword [ebp - 4]
    41 00000027 BB0A000000              	mov ebx, 10
    42 0000002C B900000000              	mov ecx, 0
    43                                  	digCount:
    44 00000031 41                      		inc ecx
    45 00000032 BA00000000              		mov edx, 0
    46 00000037 F7FB                    		idiv ebx
    47 00000039 83F800                  		cmp eax, 0
    48 0000003C 75F3                    	jnz digCount
    49                                  
    50 0000003E 894DF8                  	mov [ebp - 8], ecx
    51 00000041 8B45FC                  	mov eax, dword [ebp - 4]	
    52 00000044 B9[00000000]            	mov ecx, an
    53 00000049 034DF8                  	add ecx, dword [ebp - 8]
    54 0000004C C60100                  	mov byte [ecx], 0
    55 0000004F 49                      	dec ecx
    56                                  	
    57                                  	stringExt:
    58 00000050 BA00000000              		mov edx, 0
    59 00000055 F7FB                    		idiv ebx
    60 00000057 83C230                  		add edx, '0'
    61 0000005A 8811                    		mov byte [ecx], dl
    62 0000005C 49                      		dec ecx
    63 0000005D 83F800                  		cmp eax, 0
    64 00000060 75EE                    		jnz stringExt	
    65                                  	
    66                                  	illegal:
    67                                  	
    68                                  
    69                                  	print:
    70 00000062 68[00000000]            	push an					; call printf with 2 arguments -  
    71 00000067 68[00000000]            	push format_string		; pointer to str and pointer to format string
    72 0000006C E8(00000000)            	call printf
    73 00000071 83C410                  	add esp, 16				; clean up stack after call
    74                                  
    75                                  	
    76                                  
    77 00000074 61                      	popad			
    78 00000075 89EC                    	mov esp, ebp	
    79 00000077 5D                      	pop ebp
    80 00000078 C3                      	ret
